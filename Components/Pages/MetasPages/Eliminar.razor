@page "/Eliminar/{metaId:int}"
@inject MetasService metaService
@rendermode InteractiveServer

<EditForm Model="meta">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Eliminar Meta</h3>
        </div>

        <div class="card-body">

            <div class="col-auto">
                <label>Descripci&oacute;n</label>
                <InputText @bind-Value="@meta.Descripcion" class="form-control"></InputText>
                <ValidationMessage For="(() => meta.Descripcion)" />
            </div>

            <div class="col-auto">
                <label>Fecha</label>
                <InputDate @bind-Value="@meta.Fecha" class="form-control" min="2020-01-01"></InputDate>
                <ValidationMessage For="(() => meta.Fecha)" />
            </div>

            <div class="col-auto">
                <label>Monto</label>
                <InputNumber @bind-Value="@meta.Monto" class="form-control"></InputNumber>
                <ValidationMessage For="(() => meta.Monto)" />
            </div>
        </div>

        <div class="card-footer">
            <a href="/Index" class="btn btn-outline-info">Atras</a>
            <button type="button" @onclick="Eliminar1" class="bi bi btn-danger">Eliminar</button>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int metaId { set; get; }
    public Metas meta = new Metas();
    public string mensaje = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        meta = await metaService.firstIdAsync(metaId);
    }

    public async Task Eliminar1()
    {
        var guardar = await metaService.Delete(meta.MetaId);

        if (guardar)
        {
            nuevo();
            mensaje = "Meta Eliminada Correctamente";
        }
    }

    public void nuevo()
    {
        meta = new Metas();
        mensaje = string.Empty;
    }
}